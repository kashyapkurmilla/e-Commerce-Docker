version: '3.8'

services:
  minio:
    build:
      context: .
      dockerfile: Dockerfiles/Dockerfile.minio
    image: bookstore/minio:latest
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      - MINIO_ROOT_USER=kashyap
      - MINIO_ROOT_PASSWORD=password
    volumes:
      - minio-data:/data
    networks:
      - backend
      
  python-server:
    build:
      context: .
      dockerfile: Dockerfiles/Dockerfile.python
    image: bookstore/python-server:latest
    ports:
      - 8082:8082
    depends_on:
      - mongo
      - minio
    environment:
      - MONGO_URI=mongodb://kashyap:password@mongo:27017/bookstore
      - MINIO_URL=http://minio:9000
      - MINIO_ACCESS_KEY=kashyap
      - MINIO_SECRET_KEY=password
    networks:
      - backend

  mongo:
    build:
      context: .
      dockerfile: Dockerfiles/Dockerfile.mongo
    image: bookstore/mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=kashyap
      - MONGO_INITDB_ROOT_PASSWORD=password
    ports:
      - "27017:27017"
    volumes:
      - product-data:/data/db
    networks:
      - backend

  mongo-express:
    build:
      context: .
      dockerfile: Dockerfiles/Dockerfile.mongoexpress
    image: bookstore/mongo-express:latest
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=kashyap
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongo
    ports:
      - 8081:8081
    networks:
      - backend

volumes:
  product-data:
    driver: local
  minio-data:
    driver: local

networks:
  backend:
    driver: bridge
